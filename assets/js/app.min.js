const errors = {
    INPUT_DATA1_INVALID: {},
    INPUT_DATA2_INVALID: {},
    INPUT_DATA1_INVALID_LENGTH: {},
    INPUT_DATA2_INVALID_CHARS: {},
    AUTHORIZATION_FAILED: {},
    INTERNAL_SERVER_ERROR: {},
    GIFT_CODE_INVALID_PLAYER: {},
    GIFT_CODE_INVALID_GIFT_CODE: {},
    GIFT_CODE_USED_GIFT_CODE: {},
    GIFT_CODE_LIMIT_EXCEEDED: {},
    GIFT_CODE_BEFORE_VALID_PERIOD: {},
    GIFT_CODE_AFTER_VALID_PERIOD: {}
}
  , errors_id = {
    ja: "サポートIDが正しくありません",
    "zh-tw": "服務ID不正確。",
    ko: "서포트 ID가 올바르지 않습니다",
    en: "Incorrect Support ID",
    fr: "ID de clientèle incorrect",
    es: "ID de usuario incorrecto",
    de: "Falsche Spieler-ID",
    it: "ID cliente errato",
    "pt-br": "ID de suporte incorreta"
}
  , errors_code = {
    ja: "プレゼントコードが正しくありません",
    "zh-tw": "禮物序號不正確。​",
    ko: "선물 코드가 올바르지 않습니다",
    en: "Incorrect gift code",
    fr: "Code cadeau incorrect",
    es: "Código de regalo incorrecto",
    de: "Falscher Geschenkcode",
    it: "Codice regalo errato",
    "pt-br": "Código de Presente incorreto"
}
  , errors_chars = {
    ja: "使用できない文字が含まれています。",
    "zh-tw": "含有無法使用的文字。",
    ko: "사용할 수 없는 문자가 포함되어 있습니다.",
    en: "Invalid characters have been entered.",
    fr: "Le code saisi comporte des caractères invalides.",
    es: "Se han incluido caracteres no permitidos.",
    de: "Es wurden ungültige Zeichen eingegeben.",
    it: "Hai utilizzato dei caratteri non consentiti.",
    "pt-br": "Caracteres inválidos foram inseridos."
}
  , errors_server = {
    ja: "エラーが発生しました。しばらくしてから再度お試しください",
    "zh-tw": "發生錯誤。請稍後再試。",
    ko: "에러가 발생했습니다. 잠시 후 다시 시도해 주십시오",
    en: "An error has occurred. Please try again later.",
    fr: "Une erreur s’est produite. Veuillez réessayer plus tard.",
    es: "Se ha producido un error. Vuelve a probar más tarde.",
    de: "Ein Fehler ist aufgetreten. Bitte versuche es später erneut.",
    it: "Si è verificato un errore. Riprova più tardi.",
    "pt-br": "Ocorreu um erro. Tente novamente mais tarde."
}
  , errors_used = {
    ja: "このプレゼントコードは使用済です",
    "zh-tw": "這組序號已經使用過了。",
    ko: "이미 사용한 선물 코드입니다",
    en: "This gift code has been used already.",
    fr: "Ce code a déjà été utilisé.",
    es: "Este código de regalo ya se ha usado.",
    de: "Dieser Geschenkcode wurde bereits eingelöst.",
    it: "Questo codice regalo è già stato utilizzato.",
    "pt-br": "Este Código de Presente já foi usado."
}
  , errors_limit = {
    ja: "このプレゼントコードの受け取り上限に達しています。",
    "zh-tw": "這組禮物序號已達領取上限。",
    ko: "이 선물 코드의 수령 상한에 도달했습니다.",
    en: "This gift code’s redemption limit has been reached.",
    fr: "La limite d’utilisation de ce code cadeau a été atteinte.",
    es: "Este código de regalo ya se ha canjeado tantas veces como era posible.",
    de: "Das Einlöselimit für diesen Geschenkcode wurde erreicht.",
    it: "Il numero massimo di utilizzi di questo codice regalo è stato raggiunto.",
    "pt-br": "O limite de resgates deste Código de Presente foi atingido."
}
  , errors_before = {
    ja: "このプレゼントコードの有効期間はまだ開始していません。",
    "zh-tw": "這組禮物序號的有效期間尚未開始。",
    ko: "이 선물 코드의 유효 기간은 아직 시작되지 않았습니다.",
    en: "This gift code’s validity period has not begun yet.",
    fr: "La période de validité de ce code cadeau n’a pas encore commencé.",
    es: "El período de validez de este código de regalo no ha comenzado.",
    de: "Die Gültigkeitsdauer dieses Geschenkcodes hat noch nicht begonnen.",
    it: "Questo codice regalo non è ancora valido.",
    "pt-br": "O período de validade deste Código de Presente ainda não começou."
}
  , errors_after = {
    ja: "このプレゼントコードの有効期間は終了しています。",
    "zh-tw": "這組禮物序號已過期。",
    ko: "이 선물 코드의 유효 기간은 종료되었습니다.",
    en: "This gift code’s validity period has ended.",
    fr: "La période de validité de ce code cadeau a expiré.",
    es: "El período de validez de este código de regalo ha finalizado.",
    de: "Die Gültigkeitsdauer dieses Geschenkcodes ist abgelaufen.",
    it: "Questo codice regalo non è più valido.",
    "pt-br": "O período de validade deste Código de Presente terminou."
};
function _check_code() {
    document.getElementById("js-submit").disabled = !0;
    let e = document.querySelector("html").getAttribute("lang");
    const r = new FormData;
    r.append("support", document.getElementById("input-support").value),
    r.append("keyword", "S5N4NDM00N"),
    fetch("https://gift.pokemontcgpocket.com/api/gift/post-support/", {
        method: "POST",
        body: r
    }).then((e => e.json())).then((r => {
        if (document.getElementById("js-submit").disabled = !1,
        "ok" !== r.status)
            return void 0 !== errors[r.error_message][e] ? (document.getElementById("error-msg").innerHTML = "<span>" + errors[r.error_message][e] + "</span>",
            document.getElementById("input-support").classList.remove("input-error"),
            void ("INPUT_DATA1_INVALID" == r.error_message || "INPUT_DATA1_INVALID_LENGTH" == r.error_message || "GIFT_CODE_INVALID_PLAYER" == r.error_message ? document.getElementById("input-support").classList.add("input-error") : "INPUT_DATA2_INVALID" != r.error_message && "INPUT_DATA2_INVALID_CHARS" != r.error_message && "GIFT_CODE_INVALID_GIFT_CODE" != r.error_message && "GIFT_CODE_USED_GIFT_CODE" != r.error_message && "GIFT_CODE_LIMIT_EXCEEDED" != r.error_message && "GIFT_CODE_BEFORE_VALID_PERIOD" != r.error_message && "GIFT_CODE_AFTER_VALID_PERIOD" != r.error_message || document.getElementById("input-keyword").classList.add("input-error"))) : void 0;
        location.href = "https://gift.pokemontcgpocket.com/kr/get/"
    }
    ))
}
errors.INPUT_DATA1_INVALID = Object.assign({}, errors_id),
errors.INPUT_DATA2_INVALID = Object.assign({}, errors_code),
errors.INPUT_DATA1_INVALID_LENGTH = Object.assign({}, errors_id),
errors.INPUT_DATA2_INVALID_CHARS = Object.assign({}, errors_chars),
errors.AUTHORIZATION_FAILED = Object.assign({}, errors_server),
errors.INTERNAL_SERVER_ERROR = Object.assign({}, errors_server),
errors.GIFT_CODE_INVALID_PLAYER = Object.assign({}, errors_id),
errors.GIFT_CODE_INVALID_GIFT_CODE = Object.assign({}, errors_code),
errors.GIFT_CODE_USED_GIFT_CODE = Object.assign({}, errors_used),
errors.GIFT_CODE_LIMIT_EXCEEDED = Object.assign({}, errors_limit),
errors.GIFT_CODE_BEFORE_VALID_PERIOD = Object.assign({}, errors_before),
errors.GIFT_CODE_AFTER_VALID_PERIOD = Object.assign({}, errors_after),
$(function() {
    $("button#js-submit").prop("disabled", true);
    
    $("#page-index input").on("change", function() {
        if ($("#input-support").val() !== "") {
            $("button#js-submit").prop("disabled", false);
        } else {
            $("button#js-submit").prop("disabled", true);
        }
    });
}),
$(window).on("load", (function() {
    $('a[href^="#"]').not(".noscroll").on("click", (function() {
        var e = $(this).attr("href")
          , r = $("#" == e || "" == e ? "html" : e).offset().top;
        return $("html, body").animate({
            scrollTop: r
        }, 300, "swing"),
        !1
    }
    )),
    $(this).scrollTop() > 100 ? $("#pagetop").addClass("is-show") : $("#pagetop").removeClass("is-show"),
    $(window).scroll((function() {
        $(this).scrollTop() > 100 ? $("#pagetop").addClass("is-show") : $("#pagetop").removeClass("is-show")
    }
    )),
    $("header button").on("click", (function() {
        $(this).next().slideToggle(400)
    }
    ))
}
));
